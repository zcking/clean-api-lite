syntax = "proto3";

package users.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// These annotations are used when generating OpenAPI documentation.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Users API"
    version: "1.0.0"
  }
  external_docs: {
    url: "https://github.com/zcking/clean-api-lite";
    description: "clean-api-lite repository";
  }
  schemes: HTTPS;
};

service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/api/v1/users"
      body: "*"
      response_body: "user"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Users"]
      summary: "Create a new user"
      description: "Create a new user"
      responses: {
        key: "201"
        value: {
          description: "User created"
          schema: {
            json_schema: {
              ref: ".auth.v1.User"
            }
          }
        }
      }
    };
  }

  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/api/v1/users"
      response_body: "users"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: ["Users"]
      summary: "List all users"
      description: "List all users"
      operation_id: "listUsers"
    };
  }
}

message CreateUserRequest {
  string name = 1;
  string email = 2;
}

message CreateUserResponse {
  User user = 1;
}

message ListUsersRequest {}

message ListUsersResponse {
  repeated User users = 1;
}

message User {
  int64 id = 1;
  string name = 2;
  string email = 3;
}
